{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-2.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-2.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @brief Interface that allows conversions between systems for each magnitude\n */\nexport interface isConvertible<T> {\n  initial: T; //Cantidad de origen\n  initialUnit: string; //Unidad inicial\n  unitChange(finalUnit: string): T; \n}\n\nconst measurementsSpeed: [string[], number[]] = [['mps', 'mph', 'kph'], [0.28, 0.62, 1]];\n\n/**\n * @brief Speed class that convert differents unit systems. \n */\nexport class Speed implements isConvertible<number> {\n  /**\n   * \n   * @param initial initial amount\n   * @param initialUnit initial unit\n   */\n  constructor(public readonly initial: number, public readonly initialUnit: string) {}\n\n  /**\n   * \n   * @param finalUnit final unit\n   */\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsSpeed[1][measurementsSpeed[0].indexOf(finalUnit)] / measurementsSpeed[1][measurementsSpeed[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsMass: [string[], number[]] = [['st', 'g', 'kg'], [0.16, 1000, 1]];\n\n/**\n * @brief Mass class that convert differents unit systems. \n */\nexport class Mass implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsMass[1][measurementsMass[0].indexOf(finalUnit)] / measurementsMass[1][measurementsMass[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsLenght: [string[], number[]] = [['km', 'cm', 'm'], [0.001, 100, 1]];\n\n/**\n * @brief Lenght class that convert differents unit systems. \n */\nexport class Length implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsLenght[1][measurementsLenght[0].indexOf(finalUnit)] / measurementsLenght[1][measurementsLenght[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsTime: [string[], number[]] = [['s', 'm', 'h'], [3600, 60, 1]];\n\n/**\n * @brief Time class that convert differents unit systems. \n */\nexport class Time implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsTime[1][measurementsTime[0].indexOf(finalUnit)] / measurementsTime[1][measurementsTime[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsTemperature: [string[], number[]] = [['k', 'f', 'c'], [274.15, 33.8, 1]];\n\n/**\n * @brief Temperature class that convert differents unit systems. \n */\nexport class Temperature implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsTemperature[1][measurementsTemperature[0].indexOf(finalUnit)] / measurementsTemperature[1][measurementsTemperature[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsVolume: [string[], number[]] = [['m3', 'ml', 'l'], [0.001, 1000, 1]];\n\n/**\n * @brief Volume class that convert differents unit systems. \n */\nexport class Volume implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return Number(this.initial * measurementsVolume[1][measurementsVolume[0].indexOf(finalUnit)] / measurementsVolume[1][measurementsVolume[0].indexOf(this.initialUnit)]);\n  }\n}\n\n// const measurementsStrength: [string[], number[]] = [['kp'], [9.80665]];\n\n// /**\n//  * @brief Strength class that convert differents unit systems. \n//  */\n// export class Strength implements isConvertible<number> {\n//   constructor(public initial: number, public initialUnit: string) {}\n\n//   unitChange(finalUnit: string): number {\n//     return this.initial * measurementsStrength[1][measurementsStrength[0].indexOf(finalUnit)] / measurementsStrength[1][measurementsStrength[0].indexOf(this.initialUnit)];\n//   }\n// }\n\nlet mass = new Mass(6.8, 'g');\nconsole.log(mass.unitChange('kg'));\n\nlet volume = new Volume(6.8, 'm3');\nconsole.log(volume.unitChange('l'));\n\nlet speed = new Speed(6.8, 'mps');\nconsole.log(speed.unitChange('kph'));\n\nlet length = new Length(6.8, 'cm');\nconsole.log(length.unitChange('km'));\n\nlet time = new Time(6.8, 'm');\nconsole.log(time.unitChange('s'));\n\nlet temperature = new Temperature(6.8, 'k');\nconsole.log(temperature.unitChange('c'));"]}