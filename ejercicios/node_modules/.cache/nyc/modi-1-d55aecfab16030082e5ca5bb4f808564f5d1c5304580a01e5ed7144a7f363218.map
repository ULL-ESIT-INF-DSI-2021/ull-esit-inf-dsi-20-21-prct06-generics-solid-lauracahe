{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/modi-1.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/modi-1.ts"],"names":[],"mappings":"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","sourcesContent":["type Deportes = 'baloncesto' | 'futbol' | 'balonmano';\n\ninterface Polideportivos{\n  getSuperficie(): number;\n  getDeportes():string;\n  print(): void;\n}\n\ninterface Edificios {\n  getSuperficie(): number;\n  print(): void;\n}\n\nexport class Polideportivo implements Polideportivos {\n  /**\n   * \n   * @param superficie Superficie del recinto\n   * @param deportes Deportes permitidos en el recinto\n   */\n  constructor(private readonly superficie: number, private deportes: Deportes) {\n  }\n\n  /**\n   * @return Devuelve la superficie del recinto.\n   */\n  getSuperficie() {\n    return this.superficie;\n  }\n\n  /**\n   * @return Devuelve el deporte del recinto.\n   */\n  getDeportes() {\n    return this.deportes;\n  }\n\n  /**\n   * @brief Imprime por pantalla los datos del polideportivo.\n   */\n  print(){\n    console.log(`Polideportivo de ${this.getSuperficie} metros y se practica ${this.getDeportes()}.`);\n  }\n}\n\nclass Gym implements Edificios {\n  /**\n   * \n   * @param aforo Aforo del gimnacio\n   * @param superficie Superficie del gimnacio\n   */\n  constructor(private readonly aforo: number, private superficie: number) {\n  }\n\n  /**\n   * @return Devuelve la superficie del gimnacio\n   */\n  getSuperficie() {\n    return this.superficie;\n  }\n\n  /**\n   * @return Devuelve el aforo del gimnacio\n   */\n  getAforo() {\n    return this.aforo;\n  }\n\n  /**\n   * @brief Imprime los datos del gimnacio\n   */\n  print(){\n    console.log(`Gymnacio con aforo de ${this.getAforo()} personas y ${this.getSuperficie()} metros.`);\n  }\n}\n\n\nabstract class Edificio implements Edificios {\n  /**\n   * \n   * @param superficie Superficie del edificio\n   */\n  constructor(private superficie: number) {\n  }\n\n  /**\n   * @return Devuelve la superficie del edificio\n   */\n  getSuperficie() {\n    return this.superficie;\n  }\n\n  abstract print(): void;\n}\n\nclass Viviendas extends Edificio {\n  /**\n   * \n   * @param superficie Superficie de la vivienda\n   * @param viviendas Cantidad de viviendas\n   */\n  constructor(superficie: number, private readonly viviendas: number) {\n  super(superficie);\n  }\n\n  /**\n   * @return Número de viviendas\n   */\n  getViviendas(){\n    return this.viviendas;\n  }\n\n  print(){\n    console.log(`Vivienda con : ${this.getSuperficie()} de superficie y ${this.getViviendas()} viviendas.`);\n  }\n}\n\nclass Enseñanza extends Edificio {\n  /**\n   * \n   * @param superficie Superficie de la enseñanza\n   * @param aulas Aulas de la enseñanza\n   * @param alumnos Alumnos por cada aula\n   */\n  constructor(superficie: number, private readonly aulas: number, private readonly alumnos: number) {\n  super(superficie);\n  }\n\n  /**\n   * @return Número de aulas\n   */\n  getAulas(){\n    return this.aulas;\n  }\n\n  /**\n   * @return Número de alumnos por aulas.\n   */\n  getAlumnos(){\n    return this.alumnos;\n  }\n\n  print(){\n    console.log(`Enseñanza con : ${this.getSuperficie()} de superficie, ${this.getAulas()} aulas y ${this.getAlumnos()} alumnos.`);\n  }\n}\n\nclass Recinto<T extends Polideportivo, U extends Gym, Z extends Edificio> {\n  constructor(private recinto: (T | U | Z)[]) {\n  }\n\n  print() {\n    this.recinto.forEach((recinto) => {\n      recinto.print();\n    });\n  }\n}\n\nconst recintos =\n    new Recinto<Polideportivo, Gym, Edificio>([\n    new Polideportivo(125, 'baloncesto'),\n    new Gym(25, 50),\n    new Viviendas(30, 4),\n    new Enseñanza(100, 30, 25),\n  ]);"]}