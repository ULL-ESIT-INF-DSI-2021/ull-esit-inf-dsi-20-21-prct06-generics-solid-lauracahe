{"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-1.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-1.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":47}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":33}},"7":{"start":{"line":24,"column":8},"end":{"line":24,"column":39}},"8":{"start":{"line":42,"column":8},"end":{"line":42,"column":76}},"9":{"start":{"line":43,"column":8},"end":{"line":43,"column":33}},"10":{"start":{"line":44,"column":8},"end":{"line":44,"column":39}},"11":{"start":{"line":47,"column":0},"end":{"line":47,"column":26}},"12":{"start":{"line":63,"column":8},"end":{"line":63,"column":76}},"13":{"start":{"line":64,"column":8},"end":{"line":64,"column":33}},"14":{"start":{"line":65,"column":8},"end":{"line":65,"column":39}},"15":{"start":{"line":68,"column":0},"end":{"line":68,"column":24}},"16":{"start":{"line":80,"column":8},"end":{"line":80,"column":33}},"17":{"start":{"line":81,"column":8},"end":{"line":81,"column":33}},"18":{"start":{"line":90,"column":21},"end":{"line":90,"column":22}},"19":{"start":{"line":91,"column":8},"end":{"line":99,"column":9}},"20":{"start":{"line":92,"column":12},"end":{"line":92,"column":23}},"21":{"start":{"line":94,"column":13},"end":{"line":99,"column":9}},"22":{"start":{"line":95,"column":12},"end":{"line":95,"column":23}},"23":{"start":{"line":98,"column":12},"end":{"line":98,"column":25}},"24":{"start":{"line":100,"column":8},"end":{"line":100,"column":136}},"25":{"start":{"line":101,"column":8},"end":{"line":101,"column":98}},"26":{"start":{"line":110,"column":21},"end":{"line":110,"column":22}},"27":{"start":{"line":111,"column":8},"end":{"line":119,"column":9}},"28":{"start":{"line":112,"column":12},"end":{"line":112,"column":23}},"29":{"start":{"line":114,"column":13},"end":{"line":119,"column":9}},"30":{"start":{"line":115,"column":12},"end":{"line":115,"column":23}},"31":{"start":{"line":118,"column":12},"end":{"line":118,"column":25}},"32":{"start":{"line":120,"column":8},"end":{"line":120,"column":136}},"33":{"start":{"line":121,"column":8},"end":{"line":121,"column":98}},"34":{"start":{"line":127,"column":22},"end":{"line":127,"column":23}},"35":{"start":{"line":128,"column":22},"end":{"line":128,"column":23}},"36":{"start":{"line":129,"column":8},"end":{"line":143,"column":9}},"37":{"start":{"line":130,"column":12},"end":{"line":130,"column":63}},"38":{"start":{"line":131,"column":12},"end":{"line":131,"column":65}},"39":{"start":{"line":132,"column":12},"end":{"line":132,"column":132}},"40":{"start":{"line":133,"column":12},"end":{"line":133,"column":132}},"41":{"start":{"line":134,"column":12},"end":{"line":134,"column":58}},"42":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"43":{"start":{"line":136,"column":16},"end":{"line":136,"column":22}},"44":{"start":{"line":138,"column":12},"end":{"line":138,"column":63}},"45":{"start":{"line":139,"column":12},"end":{"line":139,"column":69}},"46":{"start":{"line":140,"column":12},"end":{"line":140,"column":132}},"47":{"start":{"line":141,"column":12},"end":{"line":141,"column":132}},"48":{"start":{"line":142,"column":12},"end":{"line":142,"column":58}},"49":{"start":{"line":146,"column":0},"end":{"line":146,"column":24}},"50":{"start":{"line":147,"column":18},"end":{"line":147,"column":132}},"51":{"start":{"line":148,"column":13},"end":{"line":148,"column":134}},"52":{"start":{"line":149,"column":20},"end":{"line":149,"column":47}},"53":{"start":{"line":150,"column":0},"end":{"line":150,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":78},"end":{"line":25,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":78},"end":{"line":45,"column":5}},"line":41},"2":{"name":"(anonymous_2)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":78},"end":{"line":66,"column":5}},"line":62},"3":{"name":"(anonymous_3)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":36},"end":{"line":82,"column":5}},"line":79},"4":{"name":"(anonymous_4)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":31},"end":{"line":102,"column":5}},"line":89},"5":{"name":"(anonymous_5)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":35},"end":{"line":122,"column":5}},"line":109},"6":{"name":"(anonymous_6)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":12},"end":{"line":144,"column":5}},"line":126}},"branchMap":{"0":{"loc":{"start":{"line":91,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":99,"column":9}},{"start":{"line":91,"column":8},"end":{"line":99,"column":9}}],"line":91},"1":{"loc":{"start":{"line":94,"column":13},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":13},"end":{"line":99,"column":9}},{"start":{"line":94,"column":13},"end":{"line":99,"column":9}}],"line":94},"2":{"loc":{"start":{"line":111,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":119,"column":9}},{"start":{"line":111,"column":8},"end":{"line":119,"column":9}}],"line":111},"3":{"loc":{"start":{"line":114,"column":13},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":13},"end":{"line":119,"column":9}},{"start":{"line":114,"column":13},"end":{"line":119,"column":9}}],"line":114},"4":{"loc":{"start":{"line":129,"column":15},"end":{"line":129,"column":105}},"type":"binary-expr","locations":[{"start":{"line":129,"column":15},"end":{"line":129,"column":58}},{"start":{"line":129,"column":62},"end":{"line":129,"column":105}}],"line":129},"5":{"loc":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},{"start":{"line":135,"column":12},"end":{"line":137,"column":13}}],"line":135}},"s":{"0":1,"1":1,"2":6,"3":6,"4":6,"5":6,"6":6,"7":6,"8":3,"9":3,"10":3,"11":1,"12":3,"13":3,"14":3,"15":1,"16":2,"17":2,"18":6,"19":6,"20":0,"21":6,"22":0,"23":6,"24":6,"25":6,"26":4,"27":4,"28":0,"29":4,"30":4,"31":0,"32":4,"33":4,"34":2,"35":2,"36":2,"37":6,"38":6,"39":6,"40":6,"41":6,"42":6,"43":2,"44":4,"45":4,"46":4,"47":4,"48":4,"49":1,"50":1,"51":1,"52":1,"53":1},"f":{"0":6,"1":3,"2":3,"3":2,"4":6,"5":4,"6":2},"b":{"0":[0,6],"1":[0,6],"2":[0,4],"3":[4,0],"4":[6,6],"5":[2,4]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-1.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-1.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @brief Type of basic statistics that contains the respective propertives\n */\nexport type BasicStatistics = {\n  attack: number,\n  defense: number,\n  speed: number,\n  hp: number\n};\n\n/**\n * @brief class that create the fighter\n */\nabstract class Fighter {\n  /**\n   * \n   * @brief Constructor of the class fighter\n   * @param name Name of the fighter\n   * @param weight Weight of the fighter\n   * @param height Height of the fighter\n   * @param BasicStatistics Basic Statistics of the fighter\n   * @param universe Universe of the fighter\n   * @param catchphrase Catch phrase of the fighter\n   */\n  constructor(public readonly name: string, public readonly weight: number, public readonly height: number, \n    public readonly BasicStatistics: BasicStatistics, public readonly universe: string, public readonly catchphrase: string) {}\n}\n\n/**\n * @brief Class of Pokemon that derivate of fighter\n */\nexport class Pokemon extends Fighter {\n  /**\n   * \n   * @brief Constructor of Pokemon class\n   * @param name Name of Pokemon\n   * @param weight Weight of Pokemon\n   * @param height Height of pokemon\n   * @param BasicStatistics Basic Statistics of pokemon\n   * @param universe Universe of pokemon\n   * @param catchphrase Catch phrase of pokemon\n   */\n  constructor(name: string, weight: number, height: number, BasicStatistics: BasicStatistics, \n    public readonly universe: string, public readonly catchphrase: string) {\n    super(name, weight, height, BasicStatistics, universe, catchphrase);\n  }\n}\n\n/**\n * @brief Class of marvel that derivate of fighter\n */\nexport class Marvel extends Fighter {\n  /**\n   * \n   * @brief Constructor of Marvel class\n   * @param name Name of Marvel character\n   * @param weight Weight of Marvel character\n   * @param height Height of Marvel character\n   * @param BasicStatistics Basic Statistics of Marvel character\n   * @param universe Universe of Marvel\n   * @param catchphrase Catch phrase of Marvel character\n   */\n  constructor(name: string, weight: number, height: number, BasicStatistics: BasicStatistics, public readonly universe: string, \n    public readonly catchphrase: string) {\n    super(name, weight, height, BasicStatistics, universe, catchphrase);\n  }\n}\n\n/**\n * @brief Class that create a combat between two fighters\n */\nexport class Combat<T extends Fighter, U extends Fighter> {\n  /**\n   * \n   * @brief Constructor that create the combat\n   * @param fighter1 Fighter one\n   * @param fighter2 Fighter two\n   */\n  constructor(public fighter1: T, public fighter2: U) {\n  }\n\n  /**\n   * \n   * @brief Calculate the damage between fighter one and fighter two\n   * @param fighter1 Fighter one\n   * @param fighter2 Fighter two\n   */\n  damage(fighter1: T, fighter2: U): number {\n    let effect: number = 0;\n    if (fighter1.universe === 'marvel') {\n      effect = 2;\n    } else if (fighter1.universe === fighter2.universe) {\n      effect = 1;\n    } else {\n      effect = 0.5;\n    }\n\n    console.log('Daño causado: ' + (50 * (fighter1.BasicStatistics.attack / fighter2.BasicStatistics.defense)* effect).toFixed(2));\n    return 50 * (fighter1.BasicStatistics.attack / fighter2.BasicStatistics.defense)* effect;\n  }\n\n  /**\n   * \n   * @brief Damage that generate the oponent to fighter one\n   * @param fighter1 Fighter one\n   * @param fighter2 Fighter two\n   */\n  damageUtoT(fighter1: U, fighter2: T): number {\n    let effect: number = 0;\n    if (fighter1.universe === fighter2.universe) {\n      effect = 2;\n    } else if (fighter1.universe === 'marvel') {\n      effect = 1;\n    } else {\n      effect = 0.5;\n    }\n\n    console.log('Daño causado: ' + (50 * (fighter1.BasicStatistics.attack / fighter2.BasicStatistics.defense)* effect).toFixed(2));\n    return 50 * (fighter1.BasicStatistics.attack / fighter2.BasicStatistics.defense)* effect;\n  }\n\n  /***\n   * @brief Print the result of the combat between two fighters\n   */\n  start() {\n    let damage1: number = 0;\n    let damage2: number = 0;\n\n    while (damage1 <= this.fighter1.BasicStatistics.hp && damage2 <= this.fighter2.BasicStatistics.hp) {\n      console.log('Ataque ' + this.fighter1.name + ': ');\n      damage2 += this.damage(this.fighter1, this.fighter2);\n      console.log('El daño máximo de ' + this.fighter1.name + ': ' + (this.fighter1.BasicStatistics.hp - damage1).toFixed(2));\n      console.log('El daño máximo de ' + this.fighter2.name + ': ' + (this.fighter2.BasicStatistics.hp - damage2).toFixed(2));\n      console.log(this.fighter1.catchphrase + '\\n');\n\n      if (damage2 >= this.fighter2.BasicStatistics.hp) {\n        break;\n      }\n\n      console.log('Ataque ' + this.fighter2.name + ': ');\n      damage1 += this.damageUtoT(this.fighter2, this.fighter1);\n      console.log('El daño máximo de ' + this.fighter1.name + ': ' + (this.fighter1.BasicStatistics.hp - damage1).toFixed(2));\n      console.log('El daño máximo de ' + this.fighter2.name + ': ' + (this.fighter2.BasicStatistics.hp - damage2).toFixed(2));\n      console.log(this.fighter2.catchphrase + '\\n');\n    }\n  }\n}\n\nconst Charizard = new Pokemon('Charizard', 90.5, 1.7, {attack: 84, defense: 78, speed: 100, hp: 78}, 'pokemon', 'The fire dragon');\nconst Aero = new Marvel('Aero', 78, 1.7, {attack: 52, defense: 90, speed: 60, hp: 50}, 'marvel', 'As a brilliant Chinese architect');\nconst finalCombat = new Combat<Pokemon, Marvel>(Charizard, Aero);\nfinalCombat.start();"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0a028a54743106e2f6a05f0e4b9a3559d0d2ac85","contentHash":"2e326fa996af0dcfbce2d3d223b74d5c442b1178409b37490dcb9861cf208c49"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-2.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-2.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":109}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":66}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":31}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"5":{"start":{"line":23,"column":8},"end":{"line":23,"column":163}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}},"7":{"start":{"line":27,"column":25},"end":{"line":27,"column":61}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":31}},"9":{"start":{"line":34,"column":8},"end":{"line":34,"column":39}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":159}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":20}},"12":{"start":{"line":41,"column":27},"end":{"line":41,"column":63}},"13":{"start":{"line":47,"column":8},"end":{"line":47,"column":31}},"14":{"start":{"line":48,"column":8},"end":{"line":48,"column":39}},"15":{"start":{"line":51,"column":8},"end":{"line":51,"column":167}},"16":{"start":{"line":54,"column":0},"end":{"line":54,"column":24}},"17":{"start":{"line":55,"column":25},"end":{"line":55,"column":57}},"18":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"19":{"start":{"line":62,"column":8},"end":{"line":62,"column":39}},"20":{"start":{"line":65,"column":8},"end":{"line":65,"column":159}},"21":{"start":{"line":68,"column":0},"end":{"line":68,"column":20}},"22":{"start":{"line":69,"column":32},"end":{"line":69,"column":68}},"23":{"start":{"line":75,"column":8},"end":{"line":75,"column":31}},"24":{"start":{"line":76,"column":8},"end":{"line":76,"column":39}},"25":{"start":{"line":79,"column":8},"end":{"line":79,"column":187}},"26":{"start":{"line":82,"column":0},"end":{"line":82,"column":34}},"27":{"start":{"line":83,"column":27},"end":{"line":83,"column":64}},"28":{"start":{"line":89,"column":8},"end":{"line":89,"column":31}},"29":{"start":{"line":90,"column":8},"end":{"line":90,"column":39}},"30":{"start":{"line":93,"column":8},"end":{"line":93,"column":175}},"31":{"start":{"line":96,"column":0},"end":{"line":96,"column":24}},"32":{"start":{"line":107,"column":11},"end":{"line":107,"column":29}},"33":{"start":{"line":108,"column":0},"end":{"line":108,"column":35}},"34":{"start":{"line":109,"column":13},"end":{"line":109,"column":34}},"35":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}},"36":{"start":{"line":111,"column":12},"end":{"line":111,"column":33}},"37":{"start":{"line":112,"column":0},"end":{"line":112,"column":37}},"38":{"start":{"line":113,"column":13},"end":{"line":113,"column":34}},"39":{"start":{"line":114,"column":0},"end":{"line":114,"column":37}},"40":{"start":{"line":115,"column":11},"end":{"line":115,"column":29}},"41":{"start":{"line":116,"column":0},"end":{"line":116,"column":34}},"42":{"start":{"line":117,"column":18},"end":{"line":117,"column":43}},"43":{"start":{"line":118,"column":0},"end":{"line":118,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":38},"end":{"line":17,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":26},"end":{"line":24,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":38},"end":{"line":35,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":26},"end":{"line":38,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":38},"end":{"line":49,"column":5}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":26},"end":{"line":52,"column":5}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":38},"end":{"line":63,"column":5}},"line":60},"7":{"name":"(anonymous_7)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":26},"end":{"line":66,"column":5}},"line":64},"8":{"name":"(anonymous_8)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":38},"end":{"line":77,"column":5}},"line":74},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":26},"end":{"line":80,"column":5}},"line":78},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":38},"end":{"line":91,"column":5}},"line":88},"11":{"name":"(anonymous_11)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":26},"end":{"line":94,"column":5}},"line":92}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":1,"12":1,"13":2,"14":2,"15":2,"16":1,"17":1,"18":2,"19":2,"20":2,"21":1,"22":1,"23":2,"24":2,"25":2,"26":1,"27":1,"28":2,"29":2,"30":2,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1},"f":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-2.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-2.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @brief Interface that allows conversions between systems for each magnitude\n */\nexport interface isConvertible<T> {\n  initial: T; //Cantidad de origen\n  initialUnit: string; //Unidad inicial\n  unitChange(finalUnit: string): T; \n}\n\nconst measurementsSpeed: [string[], number[]] = [['mps', 'mph', 'kph'], [0.28, 0.62, 1]];\n\n/**\n * @brief Speed class that convert differents unit systems. \n */\nexport class Speed implements isConvertible<number> {\n  /**\n   * \n   * @param initial initial amount\n   * @param initialUnit initial unit\n   */\n  constructor(public readonly initial: number, public readonly initialUnit: string) {}\n\n  /**\n   * \n   * @param finalUnit final unit\n   */\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsSpeed[1][measurementsSpeed[0].indexOf(finalUnit)] / measurementsSpeed[1][measurementsSpeed[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsMass: [string[], number[]] = [['st', 'g', 'kg'], [0.16, 1000, 1]];\n\n/**\n * @brief Mass class that convert differents unit systems. \n */\nexport class Mass implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsMass[1][measurementsMass[0].indexOf(finalUnit)] / measurementsMass[1][measurementsMass[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsLenght: [string[], number[]] = [['km', 'cm', 'm'], [0.001, 100, 1]];\n\n/**\n * @brief Lenght class that convert differents unit systems. \n */\nexport class Length implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsLenght[1][measurementsLenght[0].indexOf(finalUnit)] / measurementsLenght[1][measurementsLenght[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsTime: [string[], number[]] = [['s', 'm', 'h'], [3600, 60, 1]];\n\n/**\n * @brief Time class that convert differents unit systems. \n */\nexport class Time implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsTime[1][measurementsTime[0].indexOf(finalUnit)] / measurementsTime[1][measurementsTime[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsTemperature: [string[], number[]] = [['k', 'f', 'c'], [274.15, 33.8, 1]];\n\n/**\n * @brief Temperature class that convert differents unit systems. \n */\nexport class Temperature implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return this.initial * measurementsTemperature[1][measurementsTemperature[0].indexOf(finalUnit)] / measurementsTemperature[1][measurementsTemperature[0].indexOf(this.initialUnit)];\n  }\n}\n\nconst measurementsVolume: [string[], number[]] = [['m3', 'ml', 'l'], [0.001, 1000, 1]];\n\n/**\n * @brief Volume class that convert differents unit systems. \n */\nexport class Volume implements isConvertible<number> {\n  constructor(public initial: number, public initialUnit: string) {}\n\n  unitChange(finalUnit: string): number {\n    return Number(this.initial * measurementsVolume[1][measurementsVolume[0].indexOf(finalUnit)] / measurementsVolume[1][measurementsVolume[0].indexOf(this.initialUnit)]);\n  }\n}\n\n// const measurementsStrength: [string[], number[]] = [['kp'], [9.80665]];\n\n// /**\n//  * @brief Strength class that convert differents unit systems. \n//  */\n// export class Strength implements isConvertible<number> {\n//   constructor(public initial: number, public initialUnit: string) {}\n\n//   unitChange(finalUnit: string): number {\n//     return this.initial * measurementsStrength[1][measurementsStrength[0].indexOf(finalUnit)] / measurementsStrength[1][measurementsStrength[0].indexOf(this.initialUnit)];\n//   }\n// }\n\nlet mass = new Mass(6.8, 'g');\nconsole.log(mass.unitChange('kg'));\n\nlet volume = new Volume(6.8, 'm3');\nconsole.log(volume.unitChange('l'));\n\nlet speed = new Speed(6.8, 'mps');\nconsole.log(speed.unitChange('kph'));\n\nlet length = new Length(6.8, 'cm');\nconsole.log(length.unitChange('km'));\n\nlet time = new Time(6.8, 'm');\nconsole.log(time.unitChange('s'));\n\nlet temperature = new Temperature(6.8, 'k');\nconsole.log(temperature.unitChange('c'));"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab1bde990f74a4bc3f7d58325213c24952d8f363","contentHash":"d063776d0026abc0804ef77cddc049d552925436dad64f2b0261a03d6720d482"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-3.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-3.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":101}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":37}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":39}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":62}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"7":{"start":{"line":43,"column":21},"end":{"line":43,"column":23}},"8":{"start":{"line":44,"column":8},"end":{"line":82,"column":9}},"9":{"start":{"line":46,"column":16},"end":{"line":50,"column":19}},"10":{"start":{"line":47,"column":20},"end":{"line":49,"column":21}},"11":{"start":{"line":48,"column":24},"end":{"line":48,"column":43}},"12":{"start":{"line":51,"column":16},"end":{"line":51,"column":22}},"13":{"start":{"line":53,"column":16},"end":{"line":57,"column":19}},"14":{"start":{"line":54,"column":20},"end":{"line":56,"column":21}},"15":{"start":{"line":55,"column":24},"end":{"line":55,"column":43}},"16":{"start":{"line":58,"column":16},"end":{"line":58,"column":22}},"17":{"start":{"line":60,"column":16},"end":{"line":64,"column":19}},"18":{"start":{"line":61,"column":20},"end":{"line":63,"column":21}},"19":{"start":{"line":62,"column":24},"end":{"line":62,"column":43}},"20":{"start":{"line":65,"column":16},"end":{"line":65,"column":22}},"21":{"start":{"line":67,"column":16},"end":{"line":71,"column":19}},"22":{"start":{"line":68,"column":20},"end":{"line":70,"column":21}},"23":{"start":{"line":69,"column":24},"end":{"line":69,"column":43}},"24":{"start":{"line":72,"column":16},"end":{"line":72,"column":22}},"25":{"start":{"line":74,"column":16},"end":{"line":78,"column":19}},"26":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"27":{"start":{"line":76,"column":24},"end":{"line":76,"column":43}},"28":{"start":{"line":79,"column":16},"end":{"line":79,"column":22}},"29":{"start":{"line":81,"column":16},"end":{"line":81,"column":22}},"30":{"start":{"line":83,"column":8},"end":{"line":83,"column":22}},"31":{"start":{"line":86,"column":0},"end":{"line":86,"column":24}},"32":{"start":{"line":95,"column":8},"end":{"line":95,"column":26}},"33":{"start":{"line":103,"column":21},"end":{"line":103,"column":23}},"34":{"start":{"line":104,"column":8},"end":{"line":142,"column":9}},"35":{"start":{"line":106,"column":16},"end":{"line":110,"column":19}},"36":{"start":{"line":107,"column":20},"end":{"line":109,"column":21}},"37":{"start":{"line":108,"column":24},"end":{"line":108,"column":43}},"38":{"start":{"line":111,"column":16},"end":{"line":111,"column":22}},"39":{"start":{"line":113,"column":16},"end":{"line":117,"column":19}},"40":{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},"41":{"start":{"line":115,"column":24},"end":{"line":115,"column":43}},"42":{"start":{"line":118,"column":16},"end":{"line":118,"column":22}},"43":{"start":{"line":120,"column":16},"end":{"line":124,"column":19}},"44":{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},"45":{"start":{"line":122,"column":24},"end":{"line":122,"column":43}},"46":{"start":{"line":125,"column":16},"end":{"line":125,"column":22}},"47":{"start":{"line":127,"column":16},"end":{"line":131,"column":19}},"48":{"start":{"line":128,"column":20},"end":{"line":130,"column":21}},"49":{"start":{"line":129,"column":24},"end":{"line":129,"column":43}},"50":{"start":{"line":132,"column":16},"end":{"line":132,"column":22}},"51":{"start":{"line":134,"column":16},"end":{"line":138,"column":19}},"52":{"start":{"line":135,"column":20},"end":{"line":137,"column":21}},"53":{"start":{"line":136,"column":24},"end":{"line":136,"column":43}},"54":{"start":{"line":139,"column":16},"end":{"line":139,"column":22}},"55":{"start":{"line":141,"column":16},"end":{"line":141,"column":22}},"56":{"start":{"line":143,"column":8},"end":{"line":143,"column":22}},"57":{"start":{"line":146,"column":0},"end":{"line":146,"column":24}},"58":{"start":{"line":155,"column":8},"end":{"line":155,"column":26}},"59":{"start":{"line":163,"column":21},"end":{"line":163,"column":23}},"60":{"start":{"line":164,"column":8},"end":{"line":195,"column":9}},"61":{"start":{"line":166,"column":16},"end":{"line":170,"column":19}},"62":{"start":{"line":167,"column":20},"end":{"line":169,"column":21}},"63":{"start":{"line":168,"column":24},"end":{"line":168,"column":43}},"64":{"start":{"line":171,"column":16},"end":{"line":171,"column":22}},"65":{"start":{"line":173,"column":16},"end":{"line":177,"column":19}},"66":{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},"67":{"start":{"line":175,"column":24},"end":{"line":175,"column":43}},"68":{"start":{"line":178,"column":16},"end":{"line":178,"column":22}},"69":{"start":{"line":180,"column":16},"end":{"line":184,"column":19}},"70":{"start":{"line":181,"column":20},"end":{"line":183,"column":21}},"71":{"start":{"line":182,"column":24},"end":{"line":182,"column":43}},"72":{"start":{"line":185,"column":16},"end":{"line":185,"column":22}},"73":{"start":{"line":187,"column":16},"end":{"line":191,"column":19}},"74":{"start":{"line":188,"column":20},"end":{"line":190,"column":21}},"75":{"start":{"line":189,"column":24},"end":{"line":189,"column":43}},"76":{"start":{"line":192,"column":16},"end":{"line":192,"column":22}},"77":{"start":{"line":194,"column":16},"end":{"line":194,"column":22}},"78":{"start":{"line":196,"column":8},"end":{"line":196,"column":22}},"79":{"start":{"line":199,"column":0},"end":{"line":199,"column":38}},"80":{"start":{"line":200,"column":15},"end":{"line":200,"column":17}},"81":{"start":{"line":203,"column":0},"end":{"line":203,"column":87}},"82":{"start":{"line":204,"column":0},"end":{"line":204,"column":87}},"83":{"start":{"line":205,"column":0},"end":{"line":205,"column":20}},"84":{"start":{"line":206,"column":0},"end":{"line":206,"column":20}},"85":{"start":{"line":207,"column":26},"end":{"line":207,"column":44}},"86":{"start":{"line":208,"column":0},"end":{"line":208,"column":48}},"87":{"start":{"line":209,"column":0},"end":{"line":209,"column":54}},"88":{"start":{"line":210,"column":15},"end":{"line":210,"column":17}},"89":{"start":{"line":213,"column":0},"end":{"line":213,"column":105}},"90":{"start":{"line":214,"column":0},"end":{"line":214,"column":104}},"91":{"start":{"line":215,"column":0},"end":{"line":215,"column":20}},"92":{"start":{"line":216,"column":0},"end":{"line":216,"column":20}},"93":{"start":{"line":217,"column":26},"end":{"line":217,"column":44}},"94":{"start":{"line":218,"column":0},"end":{"line":218,"column":48}},"95":{"start":{"line":219,"column":0},"end":{"line":219,"column":57}},"96":{"start":{"line":220,"column":22},"end":{"line":220,"column":24}},"97":{"start":{"line":223,"column":0},"end":{"line":223,"column":89}},"98":{"start":{"line":224,"column":0},"end":{"line":224,"column":105}},"99":{"start":{"line":225,"column":0},"end":{"line":225,"column":33}},"100":{"start":{"line":226,"column":0},"end":{"line":226,"column":33}},"101":{"start":{"line":227,"column":32},"end":{"line":227,"column":64}},"102":{"start":{"line":228,"column":0},"end":{"line":228,"column":58}},"103":{"start":{"line":229,"column":0},"end":{"line":229,"column":57}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":28},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":20},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":28},"end":{"line":36,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":28},"end":{"line":84,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":46,"column":40},"end":{"line":46,"column":41}},"loc":{"start":{"line":46,"column":49},"end":{"line":50,"column":17}},"line":46},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":40},"end":{"line":53,"column":41}},"loc":{"start":{"line":53,"column":49},"end":{"line":57,"column":17}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":40},"end":{"line":60,"column":41}},"loc":{"start":{"line":60,"column":49},"end":{"line":64,"column":17}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":67,"column":40},"end":{"line":67,"column":41}},"loc":{"start":{"line":67,"column":49},"end":{"line":71,"column":17}},"line":67},"9":{"name":"(anonymous_9)","decl":{"start":{"line":74,"column":40},"end":{"line":74,"column":41}},"loc":{"start":{"line":74,"column":49},"end":{"line":78,"column":17}},"line":74},"10":{"name":"(anonymous_10)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":28},"end":{"line":96,"column":5}},"line":94},"11":{"name":"(anonymous_11)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":28},"end":{"line":144,"column":5}},"line":102},"12":{"name":"(anonymous_12)","decl":{"start":{"line":106,"column":40},"end":{"line":106,"column":41}},"loc":{"start":{"line":106,"column":49},"end":{"line":110,"column":17}},"line":106},"13":{"name":"(anonymous_13)","decl":{"start":{"line":113,"column":40},"end":{"line":113,"column":41}},"loc":{"start":{"line":113,"column":49},"end":{"line":117,"column":17}},"line":113},"14":{"name":"(anonymous_14)","decl":{"start":{"line":120,"column":40},"end":{"line":120,"column":41}},"loc":{"start":{"line":120,"column":49},"end":{"line":124,"column":17}},"line":120},"15":{"name":"(anonymous_15)","decl":{"start":{"line":127,"column":40},"end":{"line":127,"column":41}},"loc":{"start":{"line":127,"column":49},"end":{"line":131,"column":17}},"line":127},"16":{"name":"(anonymous_16)","decl":{"start":{"line":134,"column":40},"end":{"line":134,"column":41}},"loc":{"start":{"line":134,"column":49},"end":{"line":138,"column":17}},"line":134},"17":{"name":"(anonymous_17)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":28},"end":{"line":156,"column":5}},"line":154},"18":{"name":"(anonymous_18)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":28},"end":{"line":197,"column":5}},"line":162},"19":{"name":"(anonymous_19)","decl":{"start":{"line":166,"column":40},"end":{"line":166,"column":41}},"loc":{"start":{"line":166,"column":49},"end":{"line":170,"column":17}},"line":166},"20":{"name":"(anonymous_20)","decl":{"start":{"line":173,"column":40},"end":{"line":173,"column":41}},"loc":{"start":{"line":173,"column":49},"end":{"line":177,"column":17}},"line":173},"21":{"name":"(anonymous_21)","decl":{"start":{"line":180,"column":40},"end":{"line":180,"column":41}},"loc":{"start":{"line":180,"column":49},"end":{"line":184,"column":17}},"line":180},"22":{"name":"(anonymous_22)","decl":{"start":{"line":187,"column":40},"end":{"line":187,"column":41}},"loc":{"start":{"line":187,"column":49},"end":{"line":191,"column":17}},"line":187}},"branchMap":{"0":{"loc":{"start":{"line":44,"column":8},"end":{"line":82,"column":9}},"type":"switch","locations":[{"start":{"line":45,"column":12},"end":{"line":51,"column":22}},{"start":{"line":52,"column":12},"end":{"line":58,"column":22}},{"start":{"line":59,"column":12},"end":{"line":65,"column":22}},{"start":{"line":66,"column":12},"end":{"line":72,"column":22}},{"start":{"line":73,"column":12},"end":{"line":79,"column":22}},{"start":{"line":80,"column":12},"end":{"line":81,"column":22}}],"line":44},"1":{"loc":{"start":{"line":47,"column":20},"end":{"line":49,"column":21}},"type":"if","locations":[{"start":{"line":47,"column":20},"end":{"line":49,"column":21}},{"start":{"line":47,"column":20},"end":{"line":49,"column":21}}],"line":47},"2":{"loc":{"start":{"line":54,"column":20},"end":{"line":56,"column":21}},"type":"if","locations":[{"start":{"line":54,"column":20},"end":{"line":56,"column":21}},{"start":{"line":54,"column":20},"end":{"line":56,"column":21}}],"line":54},"3":{"loc":{"start":{"line":61,"column":20},"end":{"line":63,"column":21}},"type":"if","locations":[{"start":{"line":61,"column":20},"end":{"line":63,"column":21}},{"start":{"line":61,"column":20},"end":{"line":63,"column":21}}],"line":61},"4":{"loc":{"start":{"line":68,"column":20},"end":{"line":70,"column":21}},"type":"if","locations":[{"start":{"line":68,"column":20},"end":{"line":70,"column":21}},{"start":{"line":68,"column":20},"end":{"line":70,"column":21}}],"line":68},"5":{"loc":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"type":"if","locations":[{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},{"start":{"line":75,"column":20},"end":{"line":77,"column":21}}],"line":75},"6":{"loc":{"start":{"line":104,"column":8},"end":{"line":142,"column":9}},"type":"switch","locations":[{"start":{"line":105,"column":12},"end":{"line":111,"column":22}},{"start":{"line":112,"column":12},"end":{"line":118,"column":22}},{"start":{"line":119,"column":12},"end":{"line":125,"column":22}},{"start":{"line":126,"column":12},"end":{"line":132,"column":22}},{"start":{"line":133,"column":12},"end":{"line":139,"column":22}},{"start":{"line":140,"column":12},"end":{"line":141,"column":22}}],"line":104},"7":{"loc":{"start":{"line":107,"column":20},"end":{"line":109,"column":21}},"type":"if","locations":[{"start":{"line":107,"column":20},"end":{"line":109,"column":21}},{"start":{"line":107,"column":20},"end":{"line":109,"column":21}}],"line":107},"8":{"loc":{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},"type":"if","locations":[{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},{"start":{"line":114,"column":20},"end":{"line":116,"column":21}}],"line":114},"9":{"loc":{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},"type":"if","locations":[{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},{"start":{"line":121,"column":20},"end":{"line":123,"column":21}}],"line":121},"10":{"loc":{"start":{"line":128,"column":20},"end":{"line":130,"column":21}},"type":"if","locations":[{"start":{"line":128,"column":20},"end":{"line":130,"column":21}},{"start":{"line":128,"column":20},"end":{"line":130,"column":21}}],"line":128},"11":{"loc":{"start":{"line":135,"column":20},"end":{"line":137,"column":21}},"type":"if","locations":[{"start":{"line":135,"column":20},"end":{"line":137,"column":21}},{"start":{"line":135,"column":20},"end":{"line":137,"column":21}}],"line":135},"12":{"loc":{"start":{"line":164,"column":8},"end":{"line":195,"column":9}},"type":"switch","locations":[{"start":{"line":165,"column":12},"end":{"line":171,"column":22}},{"start":{"line":172,"column":12},"end":{"line":178,"column":22}},{"start":{"line":179,"column":12},"end":{"line":185,"column":22}},{"start":{"line":186,"column":12},"end":{"line":192,"column":22}},{"start":{"line":193,"column":12},"end":{"line":194,"column":22}}],"line":164},"13":{"loc":{"start":{"line":167,"column":20},"end":{"line":169,"column":21}},"type":"if","locations":[{"start":{"line":167,"column":20},"end":{"line":169,"column":21}},{"start":{"line":167,"column":20},"end":{"line":169,"column":21}}],"line":167},"14":{"loc":{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},"type":"if","locations":[{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},{"start":{"line":174,"column":20},"end":{"line":176,"column":21}}],"line":174},"15":{"loc":{"start":{"line":181,"column":20},"end":{"line":183,"column":21}},"type":"if","locations":[{"start":{"line":181,"column":20},"end":{"line":183,"column":21}},{"start":{"line":181,"column":20},"end":{"line":183,"column":21}}],"line":181},"16":{"loc":{"start":{"line":188,"column":20},"end":{"line":190,"column":21}},"type":"if","locations":[{"start":{"line":188,"column":20},"end":{"line":190,"column":21}},{"start":{"line":188,"column":20},"end":{"line":190,"column":21}}],"line":188}},"s":{"0":1,"1":1,"2":6,"3":0,"4":0,"5":1,"6":2,"7":3,"8":3,"9":0,"10":0,"11":0,"12":0,"13":1,"14":2,"15":2,"16":1,"17":1,"18":2,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":3,"31":1,"32":2,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":2,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1},"f":{"0":6,"1":0,"2":0,"3":2,"4":3,"5":0,"6":2,"7":2,"8":0,"9":0,"10":2,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":2,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[0,1,1,0,0,1],"1":[0,0],"2":[2,0],"3":[1,1],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-3.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/ejercicio-3.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @brief Interface for a emission collection\n */\nexport interface Streamable<T> {\n  collection: T[]\n\n  /**\n   * @brief Add a new emission to the collection\n   * @param emission emission to add\n   */\n  add(emission: T): void;\n\n  /**\n   * @return Returns the collection of emissions\n   */\n  getCollection(): T[];\n}\n\n\n/**\n * @brief search interface\n */\nexport interface Search<T> {\n   /**\n   * @brief Finds the elements that have the specified attribute in the collection\n   * @param attribute attribute to find\n   * @param type type of attribute\n   */\n  search(attribute: string, type: string): T[]\n}\n\nexport abstract class BasicStreamableCollection<T> implements Streamable<T>, Search<T>{\n  /**\n   * \n   * @param collection Create a collection to search or add an emission\n   */\n  constructor(public collection: T[]){}\n\n  /**\n   * @brief Add a new emission to the collection\n   * @param emission emission to add\n   */\n  add(emission: T){\n      this.collection.push(emission);\n  }\n\n  /**\n   * @return Returns the collection of emissions\n   */\n  getCollection(){\n      return this.collection;\n  }\n\n  /**\n   * @brief Finds the elements that have the specified attribute in the collection\n   * @param attribute attribute to find\n   * @param type type of attribute\n   */\n  abstract search(attribute: string, type: string): T[]\n}\n\n/**\n * @brief Specifies the attributes that every series must have\n */\nexport type Serie = {\n  name: string,\n  genre: string,\n  year: string,\n  seasons: string,\n  episodes: string\n}\n\n/**\n* @brief Stores the series collection and allows searching within the collection\n*/\nexport class Series extends BasicStreamableCollection<Serie>{\n  /**\n   * @param collection series collection (use BasicStreamableCollection template)\n   */\n  constructor(collection: Serie[]){\n      super(collection);\n  }\n\n  /**\n   * @brief Finds the elements that have the specified attribute in the collection\n   * @param attribute attribute to find\n   * @param type type of attribute\n   */\n  search(attribute :string, type :string){\n    let result: Serie[] = [];\n      \n    switch(type){\n      case \"name\":\n        this.collection.forEach(value => {\n          if (value.name === attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"genre\":\n        this.collection.forEach(value => {\n          if (value.genre === attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"year\":\n        this.collection.forEach(value => {\n          if (value.year === attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"seasons\":\n        this.collection.forEach(value => {\n          if (value.seasons === attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"episodes\":\n        this.collection.forEach(value => {\n          if (value.episodes === attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      default:\n        break;\n    }\n    return result;\n   }\n}\n\n/**\n * @brief Specify the attributes that a movie should have\n */\nexport type Movie = {\n  name: string,\n  genre: string,\n  year: string,\n  director :string,\n  duration: string\n}\n\n/**\n* @brief Stores the collection of movies and allows you to search within the collection\n*/\nexport class Movies extends BasicStreamableCollection<Movie>{\n  /**\n   * @param collection movie collection (use BasicStreamableCollection template)\n   */\n  constructor(collection: Movie[]){\n      super(collection);\n  }\n\n  /**\n   * @brief Finds the elements that have the specified attribute in the collection\n   * @param attribute attribute to find\n   * @param type type of attribute\n   */\n  search(attribute: string, type: string){\n    let result: Movie[] = [];\n      \n    switch (type){\n      case \"name\":\n        this.collection.forEach(value => {\n          if (value.name == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"genre\":\n        this.collection.forEach(value => {\n          if (value.genre == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"year\":\n        this.collection.forEach(value => {\n          if (value.year == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"director\":\n        this.collection.forEach(value => {\n          if (value.director == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"duration\":\n        this.collection.forEach(value => {\n          if (value.duration == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      default:\n        break;\n      }\n      return result;\n   }\n}\n\n/**\n * @brief Specify the attributes that a documentary should have\n */\nexport type Documentary = {\n  name: string,\n  genre: string,\n  year: string,\n  duration: string\n}\n\n/**\n* @brief Stores the collection of documentaries and allows searching within the collection\n*/\nexport class Documentaries extends BasicStreamableCollection<Documentary>{\n  /**\n   * @param collection Documentary collection (use BasicStreamableCollection template)\n   */\n  constructor(collection: Documentary[]){\n      super(collection);\n  }\n\n  /**\n   * @brief Finds the elements that have the specified attribute in the collection\n   * @param attribute attribute to find\n   * @param type type of attribute\n   */\n  search(attribute: string, type: string){\n    let result: Documentary[] = [];\n      \n    switch (type){\n      case \"name\":\n        this.collection.forEach(value => {\n          if (value.name == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"genre\":\n        this.collection.forEach(value => {\n          if (value.genre == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"year\":\n        this.collection.forEach(value => {\n          if (value.year == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      case \"duration\":\n        this.collection.forEach(value => {\n          if (value.duration == attribute) {\n            result.push(value);\n          }\n        });\n      break;\n\n      default:\n        break;\n    }\n\n    return result;\n   }\n}\n\nconst series: Serie[] = [];\nlet serie1: Serie;\nlet serie2: Serie;\n\nserie1 = {name: 'LCDP', genre: 'Action', year: '2017', seasons: '5', episodes: '40'};\nserie2 = {name: 'Lupin', genre: 'Action', year: '2021', seasons: '1', episodes: '8'};\n\nseries.push(serie1);\nseries.push(serie2);\n\nconst collectionOfSerie = new Series(series);\n\nconsole.log('Búsqueda de series del año 2017:');\nconsole.log(collectionOfSerie.search('2017', 'year'));\n\nconst movies: Movie[] = [];\nlet movie1: Movie;\nlet movie2: Movie;\n\nmovie1 = {name: 'Bajo cero', genre: 'Action', year: '2020', director: 'Lluis Quilez', duration: '140'};\nmovie2 = {name: 'Venganza', genre: 'Action', year: '2017', director: 'Pierre Morel', duration: '190'};\n\nmovies.push(movie1);\nmovies.push(movie2);\n\nconst collectionOfMovie = new Movies(movies);\n\nconsole.log('Búsqueda de películas de acción:');\nconsole.log(collectionOfSerie.search('Action', 'genre'));\n\nconst documentaries: Documentary[] = [];\nlet documentary1: Documentary;\nlet documentary2: Documentary;\n\ndocumentary1 = {name: 'Crip Camp', genre: 'Documental', year: '2020', duration: '150'};\ndocumentary2 = {name: 'El escuadrón de la muerte', genre: 'Documental', year: '2017', duration: '190'};\n\ndocumentaries.push(documentary1);\ndocumentaries.push(documentary2);\n\nconst collectionOfDocumentary = new Documentaries(documentaries);\n\nconsole.log('Búsqueda de documentales de duración 140: ');\nconsole.log(collectionOfSerie.search('140', 'duration'));"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f68762e20bc73adaf654e085eddb42bdc8afe58f","contentHash":"c20371c0d2097ce1fff2b817a0984a2e4c999c9ab18121c24141a999335ce120"},"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/modi-1.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/modi-1.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":37}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":33}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":31}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":29}},"6":{"start":{"line":30,"column":8},"end":{"line":30,"column":106}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":38}},"8":{"start":{"line":41,"column":8},"end":{"line":41,"column":27}},"9":{"start":{"line":42,"column":8},"end":{"line":42,"column":37}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":31}},"11":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"12":{"start":{"line":60,"column":8},"end":{"line":60,"column":107}},"13":{"start":{"line":69,"column":8},"end":{"line":69,"column":37}},"14":{"start":{"line":75,"column":8},"end":{"line":75,"column":31}},"15":{"start":{"line":85,"column":8},"end":{"line":85,"column":26}},"16":{"start":{"line":86,"column":8},"end":{"line":86,"column":35}},"17":{"start":{"line":92,"column":8},"end":{"line":92,"column":30}},"18":{"start":{"line":95,"column":8},"end":{"line":95,"column":112}},"19":{"start":{"line":106,"column":8},"end":{"line":106,"column":26}},"20":{"start":{"line":107,"column":8},"end":{"line":107,"column":27}},"21":{"start":{"line":108,"column":8},"end":{"line":108,"column":31}},"22":{"start":{"line":114,"column":8},"end":{"line":114,"column":26}},"23":{"start":{"line":120,"column":8},"end":{"line":120,"column":28}},"24":{"start":{"line":123,"column":8},"end":{"line":123,"column":135}},"25":{"start":{"line":128,"column":8},"end":{"line":128,"column":31}},"26":{"start":{"line":131,"column":8},"end":{"line":133,"column":11}},"27":{"start":{"line":132,"column":12},"end":{"line":132,"column":28}},"28":{"start":{"line":136,"column":17},"end":{"line":141,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":38},"end":{"line":13,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":20},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":18},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":5}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":35},"end":{"line":43,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":20},"end":{"line":49,"column":5}},"line":47},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":12},"end":{"line":61,"column":5}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":28},"end":{"line":70,"column":5}},"line":68},"9":{"name":"(anonymous_9)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":20},"end":{"line":76,"column":5}},"line":74},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":39},"end":{"line":87,"column":5}},"line":84},"11":{"name":"(anonymous_11)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":19},"end":{"line":93,"column":5}},"line":91},"12":{"name":"(anonymous_12)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":12},"end":{"line":96,"column":5}},"line":94},"13":{"name":"(anonymous_13)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":44},"end":{"line":109,"column":5}},"line":105},"14":{"name":"(anonymous_14)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":15},"end":{"line":115,"column":5}},"line":113},"15":{"name":"(anonymous_15)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":17},"end":{"line":121,"column":5}},"line":119},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":12},"end":{"line":124,"column":5}},"line":122},"17":{"name":"(anonymous_17)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":25},"end":{"line":129,"column":5}},"line":127},"18":{"name":"(anonymous_18)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":12},"end":{"line":134,"column":5}},"line":130},"19":{"name":"(anonymous_19)","decl":{"start":{"line":131,"column":29},"end":{"line":131,"column":30}},"loc":{"start":{"line":131,"column":42},"end":{"line":133,"column":9}},"line":131}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":2,"14":0,"15":1,"16":1,"17":0,"18":0,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":2,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/modi-1.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct06-generics-solid-lauracahe/ejercicios/src/modi-1.ts"],"names":[],"mappings":"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","sourcesContent":["type Deportes = 'baloncesto' | 'futbol' | 'balonmano';\n\ninterface Polideportivos{\n  getSuperficie(): number;\n  getDeportes():string;\n  print(): void;\n}\n\ninterface Edificios {\n  getSuperficie(): number;\n  print(): void;\n}\n\nexport class Polideportivo implements Polideportivos {\n  /**\n   * \n   * @param superficie Superficie del recinto\n   * @param deportes Deportes permitidos en el recinto\n   */\n  constructor(private readonly superficie: number, private deportes: Deportes) {\n  }\n\n  /**\n   * @return Devuelve la superficie del recinto.\n   */\n  getSuperficie() {\n    return this.superficie;\n  }\n\n  /**\n   * @return Devuelve el deporte del recinto.\n   */\n  getDeportes() {\n    return this.deportes;\n  }\n\n  /**\n   * @brief Imprime por pantalla los datos del polideportivo.\n   */\n  print(){\n    console.log(`Polideportivo de ${this.getSuperficie} metros y se practica ${this.getDeportes()}.`);\n  }\n}\n\nclass Gym implements Edificios {\n  /**\n   * \n   * @param aforo Aforo del gimnacio\n   * @param superficie Superficie del gimnacio\n   */\n  constructor(private readonly aforo: number, private superficie: number) {\n  }\n\n  /**\n   * @return Devuelve la superficie del gimnacio\n   */\n  getSuperficie() {\n    return this.superficie;\n  }\n\n  /**\n   * @return Devuelve el aforo del gimnacio\n   */\n  getAforo() {\n    return this.aforo;\n  }\n\n  /**\n   * @brief Imprime los datos del gimnacio\n   */\n  print(){\n    console.log(`Gymnacio con aforo de ${this.getAforo()} personas y ${this.getSuperficie()} metros.`);\n  }\n}\n\n\nabstract class Edificio implements Edificios {\n  /**\n   * \n   * @param superficie Superficie del edificio\n   */\n  constructor(private superficie: number) {\n  }\n\n  /**\n   * @return Devuelve la superficie del edificio\n   */\n  getSuperficie() {\n    return this.superficie;\n  }\n\n  abstract print(): void;\n}\n\nclass Viviendas extends Edificio {\n  /**\n   * \n   * @param superficie Superficie de la vivienda\n   * @param viviendas Cantidad de viviendas\n   */\n  constructor(superficie: number, private readonly viviendas: number) {\n  super(superficie);\n  }\n\n  /**\n   * @return Número de viviendas\n   */\n  getViviendas(){\n    return this.viviendas;\n  }\n\n  print(){\n    console.log(`Vivienda con : ${this.getSuperficie()} de superficie y ${this.getViviendas()} viviendas.`);\n  }\n}\n\nclass Enseñanza extends Edificio {\n  /**\n   * \n   * @param superficie Superficie de la enseñanza\n   * @param aulas Aulas de la enseñanza\n   * @param alumnos Alumnos por cada aula\n   */\n  constructor(superficie: number, private readonly aulas: number, private readonly alumnos: number) {\n  super(superficie);\n  }\n\n  /**\n   * @return Número de aulas\n   */\n  getAulas(){\n    return this.aulas;\n  }\n\n  /**\n   * @return Número de alumnos por aulas.\n   */\n  getAlumnos(){\n    return this.alumnos;\n  }\n\n  print(){\n    console.log(`Enseñanza con : ${this.getSuperficie()} de superficie, ${this.getAulas()} aulas y ${this.getAlumnos()} alumnos.`);\n  }\n}\n\nclass Recinto<T extends Polideportivo, U extends Gym, Z extends Edificio> {\n  constructor(private recinto: (T | U | Z)[]) {\n  }\n\n  print() {\n    this.recinto.forEach((recinto) => {\n      recinto.print();\n    });\n  }\n}\n\nconst recintos =\n    new Recinto<Polideportivo, Gym, Edificio>([\n    new Polideportivo(125, 'baloncesto'),\n    new Gym(25, 50),\n    new Viviendas(30, 4),\n    new Enseñanza(100, 30, 25),\n  ]);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bf2de8270c2465a407118b53c1f4aba115102c99","contentHash":"d55aecfab16030082e5ca5bb4f808564f5d1c5304580a01e5ed7144a7f363218"}}